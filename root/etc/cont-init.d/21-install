#!/usr/bin/with-contenv bash
set -eu

PHPMAXUPLOAD=${PHPMAXUPLOAD:-100M}
echo -e "\n[i] PHP: Set max upload to $PHPMAXUPLOAD\n"
sed -i -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize = $PHPMAXUPLOAD/g" /usr/local/etc/php/php.ini
sed -i -e "s/post_max_size\s*=\s*8M/post_max_size = $PHPMAXUPLOAD/g" /usr/local/etc/php/php.ini

function version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }

APPDIR=${APPDIR:-/var/www/html}
sed -i "s*/var/www/html*$APPDIR*g" /etc/cont-init.d/30-config
SUBDIR=${SUBDIR:-}
if [ ! $SUBDIR = "" ]; then
 MAHARADIR=$APPDIR/${SUBDIR}
 sed -i "$APPDIR/config.php*MAHARADIR/config.php*g;s*$APPDIR/config/config.php*MAHARADIR/config/config.php*g" /etc/cont-init.d/30-config
else
 MAHARADIR=$APPDIR
fi

APPVERSION=$(grep release /usr/src/mahara/lib/version.php | tail -n 1 | cut -d"'" -f2 | awk '{print $1}')
SILENTINSTALL=${SILENTINSTALL:-no}

if [ -f /var/www/html/version.php ]; then
  INSTALLED_VERSION=$(grep release $MAHARADIR/lib/version.php | tail -n 1 | cut -d"'" -f2 | awk '{print $1}')
else
  INSTALLED_VERSION="0.0.0.0"
fi

if version_gt $INSTALLED_VERSION $APPVERSION; then
  echo -e "\n[Error] Can't start Mahara because the version of the data ($INSTALLED_VERSION) is higher than the docker image version ($APPVERSION) and downgrading is not supported. Are you sure you have pulled the newest image version?"
  exit 1
fi

if version_gt $APPVERSION $INSTALLED_VERSION; then
  if [ ! $SUBDIR = "" ]; then
    if [ ! $MAHARADIR = "" ]; then
      mkdir -p $MAHARADIR
    fi
  fi
  
  HOSTTOINSTALL=${HOSTTOINSTALL:-}
  #wait for rsync in docker swarm with shared folder
  if [ ! $HOSTTOINSTALL = "" ]; then
     if [ ! $HOSTTOINSTALL = $HOSTNAME ]; then
       echo -e "[i] Installation process is performed by another instance \n... finish installationscript here, so that the other process can work without errors"
       echo -e "#Mahara\n*/1 * * * * /usr/local/bin/php $MAHARADIR/admin/cli/cron.php >/dev/null\n" > /mahara
       crontab /mahara && rm /mahara
       rm /etc/cont-init.d/20-mahara
       exit 0
     fi
     echo -e "\n[i] Copy Mahara $APPVERSION to the working folder $MAHARADIR\n"
     rsync -rlDog --chown www-data:root --inplace --delete /usr/src/mahara/ $MAHARADIR/
  else
     rsync -rlDog --chown www-data:root --inplace --delete /usr/src/mahara/ $MAHARADIR/
  fi

if [ ! -d /data ]; then
    mkdir /data
    chown www-data:www-data /data
fi

if [ ! -d /data/sessions ]; then
    mkdir /data/sessions
    chown www-data:www-data /data/sessions
fi
chmod 4777 /data

  if [ $SILENTINSTALL = "yes" ]; then

    echo -e "\n[i] Silentinstall!\n"

    APPDB=${APPDB:-mahara}
    APPDBUSER=${APPDBUSER:-mahara}
    APPDBPASS_FILE=${APPDBPASS_FILE:-/run/secrets/mysql_password}
    if [ -f $APPDBPASS_FILE ]; then
      APPDBPASS=$(cat $APPDBPASS_FILE)
    else
      APPDBPASS=${APPDBPASS:-$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)}
    fi
    
    CREATEAPPDB=${CREATEAPPDB:-yes}
    MYSQL_HOST=${MYSQL_HOST:-mariadb}
    MYSQL_PORT=${MYSQL_PORT:-3306}
    
    if [ $CREATEAPPDB = "yes" ]; then
    
      echo -e "\n[i] First install MariaDB client to create DB\n"

      apt-get update >/dev/null
      apt-get install -y --no-install-recommends netcat mariadb-client >/dev/null
    
      MYSQL_ROOT_PASSWORD_FILE=${MYSQL_ROOT_PASSWORD_FILE:-/run/secrets/mysql_root_password}
      if [ -f $MYSQL_ROOT_PASSWORD_FILE ]; then
        MYSQL_ROOT_PASSWORD=$(cat $MYSQL_ROOT_PASSWORD_FILE)
      else
        MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-}
      fi
      if [ -z $MYSQL_ROOT_PASSWORD ]; then
        echo -e "\n[STOP] MYSQL_ROOT_PASSWORD not set\n"
        exit 1
      fi
      MYSQL_ROOT=${MYSQL_ROOT:-root}  
      
      echo -e "\n[i] Create database user $APPDBUSER and database $APPDB\n"
      
      until nc -z ${MYSQL_HOST} ${MYSQL_PORT}; do sleep 1; echo "Waiting for DB to come up..."; done
      
      mysql -u ${MYSQL_ROOT} --password=${MYSQL_ROOT_PASSWORD} -h ${MYSQL_HOST} --port=${MYSQL_PORT} <<-EOF
      CREATE DATABASE IF NOT EXISTS $APPDB CHARACTER SET utf8mb4;
      GRANT ALL PRIVILEGES ON $APPDB.* TO $APPDBUSER IDENTIFIED BY '$APPDBPASS';
      FLUSH PRIVILEGES;
EOF
      apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false netcat mariadb-client >/dev/null
      apt-get clean >/dev/null
      rm -rf /var/lib/apt/lists/*
    fi

    echo -e "\n[i] Install now Mahara. Be patient :)\n"
    
    APPADMIN=${APPADMIN:-admin}
    APPADMINPASS_FILE=${APPADMINPASS_FILE:-/run/secrets/appadmin_password}
    if [ -f $APPADMINPASS_FILE ]; then
      APPADMINPASS=$(cat $APPADMINPASS_FILE)
    else
      APPADMINPASS=${APPADMINPASS:-$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)}
    fi
    APPADMINEMAIL=${APPADMINEMAIL:-admin@lochalhost.local}
    APPSALD=${APPSALD:-$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1)}
    DBTYPE=${DBTYPE:-mysql}
    SERVERNAME=${SERVERNAME:-127.0.0.1}
    CLEANURL=${CLEANURL:-yes}
    ELASTICSEARCH=${ELASTICSEARCH:-no}
    ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-127.0.0.1}
    DEBUG=${DEBUG:-yes}

    if [ ! -f /config/mahara/config.php ]; then
       echo -e "\n[i] Copy config-dist.php to /config/mahara/config.php and link to it"
       cp -a $MAHARADIR/config-dist.php /config/mahara/config.php
       sed -i "s|dbtype   = 'postgres'|dbtype = '$DBTYPE'|g" /config/mahara/config.php
       sed -i "s|dbname   = ''|dbname = '$APPDB'|g" /config/mahara/config.php
       sed -i "s|dbuser   = ''|dbuser = '$APPDBUSER'|g" /config/mahara/config.php
       sed -i "s|dbpass   = ''|dbpass = '$APPDBPASS'|g" /config/mahara/config.php
       sed -i "s|dbhost   = 'localhost'|dbhost = '$MYSQL_HOST'|g" /config/mahara/config.php
       sed -i 's|\/\/ \$cfg->wwwroot|\$cfg->wwwroot|g' /config/mahara/config.php
       sed -i "s|wwwroot = 'https:\/\/myhost.com\/mahara\/'|wwwroot = 'http:\/\/$SERVERNAME\/'|g" /config/mahara/config.php
       sed -i "s|dataroot = '\/path\/to\/uploaddir'|dataroot = '\/data'|g" /config/mahara/config.php
       sed -i 's|\/\/ \$cfg->passwordsaltmain|\$cfg->passwordsaltmain|g' /config/mahara/config.php
       sed -i "s|passwordsaltmain = 'some long random string here with lots of characters'|passwordsaltmain = '$APPSALD'|g" /config/mahara/config.php
       sed -i "s|emailcontact = ''|emailcontact = '$APPADMINEMAIL'|g" /config/mahara/config.php
       if [ $CLEANURL = "yes" ]; then
          sed -i "s#\/\/ closing php tag intentionally omitted to prevent whitespace issues#\n\$cfg->cleanurls = true;\n\$cfg->cleanurlinvalidcharacters = '/[^a-zA-Z0-9]+/';\n\$cfg->cleanurlvalidate = '/^[a-z0-9-]*\$/';\n\$cfg->cleanurlusereditable = true;\n\n\/\/ closing php tag intentionally omitted to prevent whitespace issues#g" /config/mahara/config.php
          echo -e "<IfModule mod_rewrite.c>\n   RewriteEngine on\n   RewriteRule ^user/([a-z0-9-]+)/?$ ${MAHARADIR}/user/view.php?profile=\$1&%{QUERY_STRING}\n   RewriteRule ^user/([a-z0-9-]+)/([a-z0-9-]+)/?$ ${MAHARADIR}/view/view.php?profile=\$1&page=\$2&%{QUERY_STRING}\n   RewriteRule ^group/([a-z0-9-]+)/?$ ${MAHARADIR}/group/view.php?homepage=\$1&%{QUERY_STRING}\n   RewriteRule ^group/([a-z0-9-]+)/([a-z0-9-]+)/?$ ${MAHARADIR}/view/view.php?homepage=\$1&page=\$2&%{QUERY_STRING}\n</IfModule>" > $MAHARADIR/.htaccess
          chown www-data:www-data $MAHARADIR/.htaccess
       fi
       if [ $ELASTICSEARCH = "yes" ]; then
        sed -i "s#\/\/ closing php tag intentionally omittedto prevent whitespace issues#\n\n\$cfg->plugin_search_elasticsearch_host = '$ELASTICSEARCH_HOST';\n\n\/\/ closing php tag intentionally omitted to prevent whitespace issues#g" /config/mahara/config.php
       fi
       if [ $DEBUG = "yes" ]; then
          sed -i "s#\/\/ closing php tag intentionally omitted to prevent whitespace issues#\n\n\$cfg->log_dbg_targets = LOG_TARGET_SCREEN | LOG_TARGET_ERRORLOG;\n\$cfg->log_info_targets = LOG_TARGET_SCREEN | LOG_TARGET_ERRORLOG;\n\$cfg->log_warn_targets = LOG_TARGET_SCREEN | LOG_TARGET_ERRORLOG;\n\$cfg->log_environ_targets = LOG_TARGET_SCREEN | LOG_TARGET_ERRORLOG;\n\n\/\/ closing php tag intentionally omitted to prevent whitespace issues#g" /config/mahara/config.php
       fi
    fi
    s6-ln -s /config/mahara/config.php  $MAHARADIR/config.php
    chown -R www-data:www-data /config/mahara $MAHARADIR  

    s6-envuidgid www-data php $MAHARADIR/admin/cli/install.php \
	--adminpassword="$APPADMINPASS" \
	--adminemail=$APPADMINEMAIL

    TLS=${TLS:-no}
    if [ $TLS == "yes" ]; then
      sed -i "s*http://${SERVERNAME}*https://${SERVERNAME}*g" /config/mahara/config.php
      
      if [ ! $SUBDIR = "" ]; then
        sed -i "s*https://${SERVERNAME}*https://${SERVERNAME}/$SUBDIR*g" /config/mahara/config.php
        echo -e "\n[i] Set automatic configuration:\n  Admin = $APPADMIN \n  Pass = $APPADMINPASS \n  www_root: https://${SERVERNAME}/$SUBDIR \n---\n"
      else
        echo -e "\n[i] Set automatic configuration:\n  Admin = $APPADMIN \n  Pass = $APPADMINPASS \n  www_root: https://${SERVERNAME} \n---\n"
      fi
      
    else
    
      if [ ! $SUBDIR = "" ]; then
        sed -i "s*http://${SERVERNAME}*http://${SERVERNAME}/$SUBDIR*g" /config/mahara/config.php
        echo -e "\n[i] Set automatic configuration:\n  Admin = $APPADMIN \n  Pass = $APPADMINPASS \n  www_root: http://${SERVERNAME}/$SUBDIR \n---\n"
      else
        echo -e "\n[i] Set automatic configuration:\n  Admin = $APPADMIN \n  Pass = $APPADMINPASS \n  www_root: http://${SERVERNAME} \n---\n"
      fi
      
    fi
  fi
fi

# Cron
echo -e "#Mahara\n*/5 * * * * s6-envuidgid www-data /usr/local/bin/php $MAHARADIR/lib/cron.php >> /data/mahara.log 2>&1" > /mahara
crontab /mahara && rm /mahara

EXTRA=/extra-scripts
if [ -d "$EXTRA" ]; then
  /bin/run-parts --verbose "$EXTRA"
fi

rm /etc/cont-init.d/21-install
exit 0
